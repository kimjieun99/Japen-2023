/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.72
 * Generated at: 2023-03-17 06:45:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/user/Desktop/2023%20Japan/jsp-Lacture/jsp04/jsp04_1/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/jsp11_mybatis/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/board/../include/header.jsp", Long.valueOf(1679034948517L));
    _jspx_dependants.put("/WEB-INF/board/../include/footer.jsp", Long.valueOf(1679034948484L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1679034948704L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>섬머노트</title>\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n");
      out.write("      rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700;900&family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/reset.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/common.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/layout.css\">\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"../js/jquery-3.6.3.min.js\"></script>\r\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("	<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <link href=\"../summernote/summernote.min.css\" rel=\"stylesheet\">\r\n");
      out.write("	<script src=\"../summernote/summernote.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <!-- \r\n");
      out.write("    	섬머노트\r\n");
      out.write("    	부트스트랩이 있어야 한다. \r\n");
      out.write("    \r\n");
      out.write("     -->\r\n");
      out.write("    \r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <header id=\"header\" class=\"header\">\r\n");
      out.write("      <h1 id=\"logo\">\r\n");
      out.write("        <a href=\"index.jsp\">JJANG'S MEDIA LAB</a>\r\n");
      out.write("      </h1>\r\n");
      out.write("      <nav id=\"gnb\">\r\n");
      out.write("        <h2 class=\"hidden\">global navigation</h2>\r\n");
      out.write("        <ul class=\"list\">\r\n");
      out.write("          <li><a href=\"\">회원가입</a></li>\r\n");
      out.write("          <li><a href=\"\">로그인</a></li>\r\n");
      out.write("          <li><a href=\"../board/list\">게시판</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("	<form class=\"form\" action=\"../board/modifyProcess\" method=\"POST\">\r\n");
      out.write("		<table class=\"board\">\r\n");
      out.write("			<colgroup>\r\n");
      out.write("				<col style=\"width:20%\">\r\n");
      out.write("				<col style=\"width:80%\">\r\n");
      out.write("			</colgroup>\r\n");
      out.write("			<tbody>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>이름</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"userName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDto.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>제목</th>\r\n");
      out.write("					<td><input type=\"text\" name=\"subject\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDto.subject }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>내용</th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<textarea name=\"contents\" id=\"summernote\" >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDto.contents}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		<input type=\"hidden\" name=\"no\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDto.no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		<div class=\"btns\">\r\n");
      out.write("			<button class=\"btn confirm\">확인</button>\r\n");
      out.write("			<button class=\"btn reset\" type=\"reset\">취소</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</main>\r\n");
      out.write("<script>\r\n");
      out.write("	$(\"#summernote\").summernote({\r\n");
      out.write("		height:300,\r\n");
      out.write("		// 섬머노트에서 제공하는 이벤트 처리 하는 곳\r\n");
      out.write("		callbacks:{\r\n");
      out.write("			onImageUpload:function(files) {\r\n");
      out.write("				console.log(\"이미지 첨부 됨\");\r\n");
      out.write("				console.log(files);\r\n");
      out.write("				for(let i=0;i<files.length;i++){\r\n");
      out.write("					uploadImage(files[i],this);\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	})\r\n");
      out.write("	// form으로 데이터 보내기(get, post), queryString(주소창에 값 실어 보내기... get)\r\n");
      out.write("	function uploadImage(file,editor) {\r\n");
      out.write("		\r\n");
      out.write("		const sendData = new FormData();  // key:value  <form><input type=\"file\" name=\"uploadFile\"></form>\r\n");
      out.write("		sendData.append(\"uploadFile\",file);\r\n");
      out.write("		console.log(sendData);\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url:\"../board/summernoteFileUpload\",\r\n");
      out.write("			type:\"POST\",\r\n");
      out.write("			data:sendData,\r\n");
      out.write("			contentType:false, // true=> enctype=\"x-www-form-urlencoded\" 를 쓰지 않겠다.  false =>  multipart/form-data\r\n");
      out.write("			processData:false,  // QueryString으로 날아가는걸 막겠다.\r\n");
      out.write("			success:function(response) {\r\n");
      out.write("				//위에 있는 url에서 응답을 기대하고 있음...\r\n");
      out.write("				console.log(response);\r\n");
      out.write("				$(editor).summernote(\"editor.insertImage\",response.fileUrl);\r\n");
      out.write("			},\r\n");
      out.write("			error:function() {\r\n");
      out.write("				console.log(\"파일 업로드 실패\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("	}\r\n");
      out.write("	 /* $(\"#summernote\").summernote(\"code\",  '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${boardDto.contents}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); */\r\n");
      out.write("</script>\r\n");
      out.write("<footer class=\"footer\">\r\n");
      out.write("    	<address>\r\n");
      out.write("    		<p>all copyrights reserved by jjang051</p>\r\n");
      out.write("    	</address>\r\n");
      out.write("    </footer>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
